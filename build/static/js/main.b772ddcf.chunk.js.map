{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/numbers.js","index.js"],"names":["Filter","filter","onChange","value","PersonForm","onSubmit","name","number","type","Persons","persons","Notification","notification","success","className","axios","get","then","response","data","newObject","post","id","put","delete","ReactDOM","render","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","setSuccess","setFiltered","useEffect","personService","initialPersons","console","log","peopleToShow","person","toLowerCase","includes","deleteNum","event","personID","target","window","confirm","check","item","catch","error","showMessage","message","successNotification","setTimeout","preventDefault","personObject","some","p","personId","find","updatedEntry","Object","assign","map","concat","key","onClick","document","getElementById"],"mappings":"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","file":"static/js/main.b772ddcf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div>\r\n      Filter Shown with <input onChange={onChange} value={filter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({ onSubmit, name, number }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          name: <input value={name.value} onChange={name.onChange} />\r\n        </div>\r\n        <p></p>\r\n        <div>\r\n          number: <input value={number.value} onChange={number.onChange} />\r\n        </div>\r\n        <p></p>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons }) => {\r\n  return <div>{persons}</div>;\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification, success }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n  if (success) {\r\n    return <div className=\"success\">{notification}</div>;\r\n  } else {\r\n    return <div className=\"error\">{notification}</div>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\nimport \"./index.css\";\r\nimport personService from \"./services/numbers\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [filter, setFiltered] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(initialPersons => setPersons(initialPersons));\r\n  }, []);\r\n\r\n  console.log(\"Persons\", persons);\r\n\r\n  const peopleToShow =\r\n    filter === \"\"\r\n      ? persons\r\n      : persons.filter(person =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n\r\n  const rows = () =>\r\n    peopleToShow.map(p => (\r\n      <p className=\"number\" key={p.name}>\r\n        {p.name} {p.number}{\" \"}\r\n        <span>\r\n          <button value={p.id} onClick={deleteNum}>\r\n            delete\r\n          </button>\r\n        </span>\r\n      </p>\r\n    ));\r\n\r\n  const deleteNum = event => {\r\n    let personID = event.target.value;\r\n    if (window.confirm(\"Do you really want to delete?\")) {\r\n      personService\r\n        .deletePerson(personID)\r\n        .then(() => {\r\n          let check = persons.filter(item => item.id != personID);\r\n          console.log(\"Check\", check);\r\n          setPersons(check);\r\n        })\r\n        .catch(error => {\r\n          setNotification(\r\n            `Sorry that user was already deleted from the phonebook`,\r\n            false\r\n          );\r\n          setPersons(persons.filter(item => item.id != personID));\r\n        });\r\n    }\r\n  };\r\n\r\n  const addNameNum = event => {\r\n    event.preventDefault();\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    if (persons.some(p => p.name.toLowerCase() === newName.toLowerCase())) {\r\n      let personId = persons.find(\r\n        p => p.name.toLowerCase() === newName.toLowerCase()\r\n      );\r\n      let updatedEntry = Object.assign(personId, personObject);\r\n\r\n      window.confirm(\r\n        `${newName} is allready in the phonebok. Would you like to replace the old number with a new one?`\r\n      );\r\n\r\n      personService\r\n        .update(personId.id, personObject)\r\n        .then(() => {\r\n          setPersons(\r\n            persons.map(item => (item.name === newName ? updatedEntry : item))\r\n          );\r\n          showMessage(`Success! User ${newName} was updated`);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch(error => {\r\n          showMessage(\r\n            `Update failed, ${newName} allready removed from phonebook`,\r\n            false\r\n          );\r\n        });\r\n    } else {\r\n      personService\r\n        .create(personObject)\r\n        .then(data => {\r\n          setPersons(persons.concat(data));\r\n          showMessage(`Success! User ${newName} was added`);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch(error => {\r\n          showMessage(\r\n            `Sorry can't add that number. Here's why: ,\r\n            ${error.response.data.error}`,\r\n            false\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const showMessage = (message, successNotification = true) => {\r\n    setNotification(message);\r\n    setSuccess(successNotification);\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n      setSuccess(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSearch = event => {\r\n    setFiltered(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n\r\n      <Notification notification={notification} success={success} />\r\n\r\n      <Filter value={filter} onChange={handleSearch} />\r\n\r\n      <h2>Add a new</h2>\r\n\r\n      <PersonForm\r\n        onSubmit={addNameNum}\r\n        name={{ value: newName, onChange: handleNameChange }}\r\n        number={{ value: newNumber, onChange: handleNumberChange }}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons persons={rows()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}