{"version":3,"sources":["reducers/searchReducer.js","reducers/filterReducer.js","components/Search.js","components/Blogs.js","services/blogs.js","services/users.js","reducers/blogReducer.js","reducers/notificationReducer.js","hooks/index.js","components/Blog.js","components/NewBlog.js","components/User.js","services/login.js","reducers/loginReducer.js","components/Navbar.js","reducers/userReducer.js","components/NewUser.js","components/Users.js","components/Notification.js","components/LoginForm.js","App.js","store.js","index.js"],"names":["clearSearch","search","type","searchReducer","state","action","filterReducer","filter","connect","searchChange","filterChange","props","style","marginBottom","onChange","event","target","value","toLowerCase","searchBlogs","blogs","a","title","includes","mapDispatchToProps","blogsToShow","clear","onClick","to","Table","striped","celled","Header","Row","HeaderCell","Body","sort","b","likes","map","blog","key","id","Cell","baseUrl","token","comment","axios","post","response","data","create","newObject","config","headers","Authorization","update","put","getAll","get","then","updateLikes","remove","delete","setToken","newToken","blogReducer","removeObject","comments","concat","blogToChange","find","changedBlog","setNotification","content","seconds","dispatch","setTimeout","notificationReducer","useField","useState","setValue","reset","omitreset","Blog","history","addComment","addLike","removeBlog","user","newComment","handleComment","commentToAdd","author","vote","name","username","window","confirm","push","toggleRemove","Form","onSubmit","Field","Input","label","Button","blogService","blogToDelete","withRouter","notification","createBlog","newBlog","userService","updatedUsers","AddBlog","newTitle","newAuthor","newURL","addBlog","preventDefault","blogObject","url","loggedUser","users","length","login","credentials","loginService","password","localStorage","setItem","JSON","stringify","logout","removeItem","loginReducer","Menu","inverted","Item","link","size","userReducer","createUser","newUser","CreateUser","newName","newUserName","newPassword","addUser","userObject","loginUser","console","log","Container","Message","Login","handleLogin","initializeBlogs","initializeUsers","fetchUser","userStr","getItem","parse","setUser","loadBlogs","loadUsers","useEffect","loggedUserJSON","path","Fragment","exact","render","match","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.80f60fb4.chunk.js","sourcesContent":["export const searchChange = search => {\r\n  return {\r\n    type: \"SET_SEARCH\",\r\n    search\r\n  };\r\n};\r\n\r\nexport const clearSearch = search => {\r\n  return {\r\n    type: \"RESET_SEARCH\",\r\n    search\r\n  };\r\n};\r\n\r\nconst searchReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH\":\r\n      return action.search;\r\n    case \"RESET_SEARCH\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","export const filterChange = filter => {\r\n  return {\r\n    type: \"SET_FILTER\",\r\n    filter\r\n  };\r\n};\r\n\r\nconst filterReducer = (state = \"DESC\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_FILTER\":\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchChange, clearSearch } from \"../reducers/searchReducer\";\r\nimport { filterChange } from \"../reducers/filterReducer\";\r\n\r\nconst Search = props => {\r\n  const handleSearch = event => {\r\n    props.searchChange(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    props.filterChange(event.target.value);\r\n  };\r\n\r\n  const style = {\r\n    marginBottom: 10\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      search\r\n      <input onChange={handleSearch} />\r\n      <select onChange={handleFilter}>\r\n        <option value=\"DESC\">Sort Likes Descending</option>\r\n        <option value=\"ASC\">Sort Likes Ascending</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search: state.search,\r\n    filter: state.filter\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchChange,\r\n  filterChange,\r\n  clearSearch\r\n})(Search);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSearch } from \"../reducers/searchReducer\";\r\nimport Search from \"./Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nconst searchBlogs = ({ blogs, search }) => {\r\n  return search\r\n    ? blogs.filter(a => a.title.toLowerCase().includes(search.toLowerCase()))\r\n    : blogs;\r\n};\r\n\r\nconst Blogs = ({ blogsToShow, filter, clearSearch }) => {\r\n  const clear = () => {\r\n    clearSearch();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <div>\r\n        <h3>Blogs</h3>\r\n        <Link onClick={() => clear()} to=\"/newblog\">\r\n          create a new blog post\r\n        </Link>\r\n        <Table striped celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Blog Title</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {filter === \"DESC\"\r\n              ? blogsToShow\r\n                  .sort((a, b) => b.likes - a.likes)\r\n                  .map(blog => (\r\n                    <Table.Row key={blog.id}>\r\n                      <Table.Cell>\r\n                        <Link onClick={() => clear()} to={`/blogs/${blog.id}`}>\r\n                          {blog.title}\r\n                        </Link>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  ))\r\n              : blogsToShow\r\n                  .sort((a, b) => a.likes - b.likes)\r\n                  .map(blog => (\r\n                    <Table.Row key={blog.id}>\r\n                      <Table.Cell>\r\n                        <Link onClick={() => clear()} to={`/blogs/${blog.id}`}>\r\n                          {blog.title}\r\n                        </Link>\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blogs: state.blogs,\r\n    filter: state.filter,\r\n    blogsToShow: searchBlogs(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  clearSearch\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogs);\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst comment = async (id, comment) => {\r\n  const response = await axios.post(baseUrl + \"/\" + id + \"/comments\", {\r\n    comment\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst remove = blog => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const request = axios.delete(`${baseUrl}/${blog.id}`, config);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = async blog => {\r\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog);\r\n  return response.data;\r\n};\r\n\r\nconst updateLikes = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  comment,\r\n  updateLikes,\r\n  update,\r\n  remove,\r\n  setToken\r\n};\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/users\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst remove = blog => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const request = axios.delete(`${baseUrl}/${blog.id}`, config);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = async blog => {\r\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, create, update, remove, setToken };\r\n","import blogService from \"../services/blogs\";\r\nimport userService from \"../services/users\";\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data];\r\n    case \"DELETE_BLOG\":\r\n      const removeObject = action.data;\r\n      return state.filter(blog => blog.id !== removeObject.id);\r\n    case \"ADD_COMMENT\":\r\n      return state.map(b =>\r\n        b.id === action.data.id\r\n          ? {\r\n              ...b,\r\n              comments: b.comments.concat(action.data.comment)\r\n            }\r\n          : b\r\n      );\r\n    case \"LIKE\":\r\n      const id = action.data.id;\r\n      const blogToChange = state.find(a => a.id === id);\r\n      const changedBlog = {\r\n        ...blogToChange,\r\n        likes: blogToChange.likes\r\n      };\r\n      return state.map(blog => (blog.id !== id ? blog : changedBlog));\r\n    case \"INIT_BLOGS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: blogs\r\n    });\r\n  };\r\n};\r\n\r\nexport const addComment = data => {\r\n  return async dispatch => {\r\n    const newComment = await blogService.comment(data.id, data.comment);\r\n    dispatch({\r\n      type: \"ADD_COMMENT\",\r\n      data: {\r\n        id: data.id,\r\n        comment: newComment\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const addLike = blog => {\r\n  return async dispatch => {\r\n    blog.likes++;\r\n    await blogService.updateLikes(blog.id, blog);\r\n    dispatch({\r\n      type: \"LIKE\",\r\n      data: blog\r\n    });\r\n  };\r\n};\r\n\r\nexport const createBlog = content => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(content);\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      data: newBlog\r\n    });\r\n    const updatedUsers = await userService.getAll();\r\n    dispatch({\r\n      type: \"USER_POSTED_BLOG\",\r\n      data: updatedUsers\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeBlog = blogToDelete => {\r\n  return async dispatch => {\r\n    await blogService.remove(blogToDelete);\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: blogToDelete\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogReducer;\r\n","const initialState = null;\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_NOTIFICATION\":\r\n      state = action.data;\r\n      return state;\r\n    case \"REMOVE_NOTIFICATION\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotification = (content, seconds) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      data: content\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"REMOVE_NOTIFICATION\",\r\n        data: null\r\n      });\r\n    }, seconds * 1000);\r\n  };\r\n};\r\n\r\nexport const removeNotification = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"REMOVE_NOTIFICATION\",\r\n      notification: null\r\n    });\r\n  };\r\n};\r\n\r\nexport default notificationReducer;\r\n","import { useState } from \"react\";\r\n\r\nexport const useField = type => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset,\r\n    omitreset: {\r\n      type,\r\n      value,\r\n      onChange\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { addLike, removeBlog, addComment } from \"../reducers/blogReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport { useField } from \"../hooks\";\r\n\r\nlet Blog = ({\r\n  history,\r\n  addComment,\r\n  addLike,\r\n  removeBlog,\r\n  setNotification,\r\n  blog,\r\n  user\r\n}) => {\r\n  const newComment = useField(\"text\");\r\n\r\n  if (!blog) return null;\r\n\r\n  const vote = blog => {\r\n    addLike(blog);\r\n    setNotification(`You just liked ${blog.title}!`, 5);\r\n  };\r\n\r\n  const remove = blog => {\r\n    if (window.confirm(\"Do you really want to delete?\")) {\r\n      removeBlog(blog);\r\n      history.push(\"/\");\r\n      setNotification(`You deleted ${blog.title}!`, 5);\r\n    }\r\n  };\r\n\r\n  const toggleRemove = () => {\r\n    if (blog.user.username === user.username)\r\n      return <button onClick={() => remove(blog)}>remove</button>;\r\n  };\r\n\r\n  const handleComment = async () => {\r\n    try {\r\n      const commentToAdd = { id: blog.id, comment: newComment.value };\r\n      await addComment(commentToAdd);\r\n      newComment.reset();\r\n      setNotification(\"New Comment Added\", 4);\r\n    } catch (error) {\r\n      setNotification(\"Sorry, couldn't submit comment.\", 5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {blog ? (\r\n        <div>\r\n          <h3 id=\"title\">\r\n            {blog.title} by {blog.author}\r\n          </h3>\r\n          <div>\r\n            <p>\r\n              {blog.likes} likes{\" \"}\r\n              <button onClick={() => vote(blog)}>like</button>\r\n            </p>\r\n            <p>Added by {blog.user.name}</p>\r\n            <p>{toggleRemove()}</p>\r\n            <Form onSubmit={handleComment}>\r\n              <Form.Field>\r\n                <Form.Input\r\n                  {...newComment.omitreset}\r\n                  reset={null}\r\n                  label=\"Comment\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Button type=\"submit\">add comment</Form.Button>\r\n            </Form>\r\n            <h4>Comments</h4>\r\n            <p>\r\n              {blog.comments ? (\r\n                blog.comments.map(comment => <p>{comment.comment}</p>)\r\n              ) : (\r\n                <p>No Comments Yet</p>\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blogs: state.blogs,\r\n    likes: state.likes,\r\n    notification: state.notification\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addLike,\r\n  removeBlog,\r\n  setNotification,\r\n  addComment\r\n};\r\n\r\nBlog = withRouter(Blog);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBlog } from \"../reducers/blogReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport { useField } from \"../hooks\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewBlog = props => {\r\n  const newTitle = useField(\"text\");\r\n  const newAuthor = useField(\"text\");\r\n  const newURL = useField(\"text\");\r\n\r\n  const addBlog = async event => {\r\n    event.preventDefault();\r\n\r\n    const blogObject = {\r\n      url: newURL.value,\r\n      title: newTitle.value,\r\n      author: newAuthor.value\r\n    };\r\n\r\n    await props.createBlog(blogObject);\r\n    props.history.push(\"/blogs\");\r\n    setNotification(`New Blog Created!`, 4);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={addBlog}>\r\n      <Form.Field>\r\n        <Form.Input {...newTitle} reset={null} label=\"Title\" id=\"title\" />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Form.Input {...newAuthor} reset={null} label=\"Author\" id=\"author\" />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Form.Input {...newURL} reset={null} label=\"URL\" id=\"url\" />\r\n      </Form.Field>\r\n      <Form.Button type=\"submit\">add blog</Form.Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedUser: state.loggedUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createBlog,\r\n  setNotification\r\n};\r\n\r\nconst AddBlog = withRouter(NewBlog);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBlog);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nconst User = ({ user }) => {\r\n  //   const remove = blog => {\r\n  //     if (window.confirm(\"Do you really want to delete?\")) {\r\n  //       removeBlog(blog);\r\n  //       setNotification(`You deleted ${blog.title}!`, 5);\r\n  //     }\r\n  //   };\r\n\r\n  //   const toggleRemove = () => {\r\n  //     if (blog.user.username === user.username)\r\n  //       return <button onClick={() => remove(blog)}>remove</button>;\r\n  //   };\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h2 id=\"title\">Name: {user.name}</h2>\r\n      <h3 id=\"title\">Username: {user.username}</h3>\r\n      <h4>These are the Blogs {user.name} has added</h4>\r\n      <Table striped celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Blog Title</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {user.blogs.length > 0 ? (\r\n            user.blogs.map(blog => (\r\n              <Table.Row key={blog.id}>\r\n                <Table.Cell>{blog.title}</Table.Cell>\r\n              </Table.Row>\r\n            ))\r\n          ) : (\r\n            <span>No Blogs Added Yet!</span>\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import loginService from \"../services/login\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      if (action.data) blogService.setToken(action.data.token);\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchUser = () => {\r\n  return dispatch => {\r\n    const userStr = window.localStorage.getItem(\"loggedBlogAppUser\");\r\n    const user = JSON.parse(userStr);\r\n    if (user) {\r\n      dispatch({ type: \"SET_USER\", data: user });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setUser = data => {\r\n  return dispatch => {\r\n    dispatch({ type: \"SET_USER\", data });\r\n  };\r\n};\r\n\r\nexport const login = data => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username: data.username,\r\n      password: data.password\r\n    });\r\n    window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\r\n    dispatch({ type: \"SET_USER\", data: user });\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem(\"loggedBlogAppUser\");\r\n    dispatch({ type: \"SET_USER\", data: null });\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Button } from \"semantic-ui-react\";\r\nimport { clearSearch } from \"../reducers/searchReducer\";\r\nimport { logout } from \"../reducers/loginReducer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = props => {\r\n  const clear = () => {\r\n    props.clearSearch();\r\n  };\r\n\r\n  const logout = () => {\r\n    props.logout();\r\n  };\r\n\r\n  return (\r\n    <Menu inverted>\r\n      <Menu.Item link>\r\n        <Link onClick={() => clear()} to=\"/\">\r\n          home\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item link>\r\n        <Link onClick={() => clear()} to=\"/blogs\">\r\n          blogs\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item link>\r\n        <Link onClick={() => clear()} to=\"/users\">\r\n          users\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item link>\r\n        {props.loggedUser ? (\r\n          <span>\r\n            <em>Hi {props.loggedUser.name} you're logged in!</em>{\" \"}\r\n            <Button size=\"mini\" onClick={logout}>\r\n              logout\r\n            </Button>\r\n          </span>\r\n        ) : (\r\n          <Link onClick={() => clear()} to=\"/login\">\r\n            login\r\n          </Link>\r\n        )}\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedUser: state.loggedUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  clearSearch,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import userService from \"../services/users\";\r\nimport { login } from \"./loginReducer\";\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"NEW_USER\":\r\n      return [...state, action.data];\r\n    case \"USER_POSTED_BLOG\":\r\n      return [...action.data];\r\n    case \"DELETE_USER\":\r\n      const removeObject = action.data;\r\n      return state.filter(user => user.id !== removeObject.id);\r\n    case \"INIT_USERS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll();\r\n    dispatch({\r\n      type: \"INIT_USERS\",\r\n      data: users\r\n    });\r\n  };\r\n};\r\n\r\nexport const createUser = content => {\r\n  return async dispatch => {\r\n    const newUser = await userService.create(content);\r\n    dispatch({\r\n      type: \"NEW_USER\",\r\n      data: newUser\r\n    });\r\n    login(newUser);\r\n  };\r\n};\r\n\r\nexport const removeUser = userToDelete => {\r\n  return async dispatch => {\r\n    await userService.remove(userToDelete);\r\n    dispatch({\r\n      type: \"DELETE_USER\",\r\n      data: userToDelete\r\n    });\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createUser } from \"../reducers/userReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst NewUser = props => {\r\n  const newName = useField(\"text\");\r\n  const newUserName = useField(\"text\");\r\n  const newPassword = useField(\"text\");\r\n\r\n  const addUser = async event => {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      const userObject = {\r\n        name: newName.value,\r\n        username: newUserName.value,\r\n        password: newPassword.value\r\n      };\r\n\r\n      const loginUser = {\r\n        username: newUserName.value,\r\n        password: newPassword.value\r\n      };\r\n\r\n      await props.createUser(userObject);\r\n      await props.login(loginUser);\r\n      //   newName.reset();\r\n      //   newUserName.reset();\r\n      //   newPassword.reset();\r\n      props.history.push(\"/\");\r\n      props.setNotification(`You've added a new account!`, 4);\r\n    } catch (error) {\r\n      console.log(\"Error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Create a New Blog Account</h1>\r\n      <Form onSubmit={addUser}>\r\n        <Form.Field>\r\n          <Form.Input {...newName} reset={null} label=\"Name\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Input {...newUserName} reset={null} label=\"Username\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Input {...newPassword} reset={null} label=\"Password\" />\r\n        </Form.Field>\r\n        <Form.Button type=\"submit\">sign up</Form.Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createUser,\r\n  login,\r\n  setNotification\r\n};\r\n\r\nconst CreateUser = withRouter(NewUser);\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateUser);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { clearSearch } from \"../reducers/searchReducer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nconst Users = props => {\r\n  const clear = () => {\r\n    clearSearch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell># Blogs</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {props.users.map(user => (\r\n            <Table.Row key={user.id}>\r\n              <Table.Cell>\r\n                <Link onClick={() => clear()} to={`/users/${user.id}`}>\r\n                  {user.name}\r\n                </Link>\r\n              </Table.Cell>\r\n              <Table.Cell>{user.blogs.length} </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users\r\n  };\r\n};\r\n\r\nUsers.propTypes = {\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps)(Users);\r\n","import React from \"react\";\r\nimport { Container, Message } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Notification = props => {\r\n  const { notification } = props;\r\n\r\n  return (\r\n    notification && (\r\n      <Container>\r\n        <Message>{notification}</Message>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\r\nimport { login } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport NewUser from \"../components/NewUser\";\r\nimport { useField } from \"../hooks\";\r\nimport { logout } from \"../reducers/loginReducer\";\r\n\r\nconst LoginForm = props => {\r\n  const username = useField(\"text\");\r\n  const password = useField(\"password\");\r\n\r\n  const logout = () => {\r\n    props.logout();\r\n  };\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = { username: username.value, password: password.value };\r\n      await props.login(user);\r\n      username.reset();\r\n      password.reset();\r\n      props.history.push(\"/\");\r\n    } catch (error) {\r\n      props.setNotification(\"Sorry wrong username or password.\", 5);\r\n    }\r\n  };\r\n\r\n  if (props.loggedUser)\r\n    return (\r\n      <p>\r\n        You are currently logged in. Would you like to{\" \"}\r\n        <Link onClick={logout} to=\"/\">\r\n          logout?\r\n        </Link>\r\n      </p>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <h1>Login To Blog Application</h1>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>username</label>\r\n          <input {...username.omitreset} name=\"username\" id=\"username\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>password</label>\r\n          <input {...password.omitreset} type=\"password\" id=\"password\" />\r\n        </Form.Field>\r\n        <Button type=\"submit\" id=\"login\">\r\n          login\r\n        </Button>\r\n        <div>\r\n          <br />\r\n          <Link to=\"/newuser\">or signup to become a new user</Link>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification,\r\n    loggedUser: state.loggedUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  setNotification,\r\n  logout\r\n};\r\n\r\nconst Login = withRouter(LoginForm);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport Blogs from \"./components/Blogs\";\nimport Blog from \"./components/Blog\";\nimport AddBlog from \"./components/NewBlog\";\nimport User from \"./components/User\";\nimport Navbar from \"./components/Navbar\";\nimport CreateUser from \"./components/NewUser\";\nimport Users from \"./components/Users\";\nimport Notification from \"./components/Notification\";\nimport Login from \"./components/LoginForm\";\nimport blogService from \"./services/blogs\";\nimport { initializeBlogs } from \"./reducers/blogReducer\";\nimport { initializeUsers } from \"./reducers/userReducer\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport { fetchUser, setUser, logout, login } from \"./reducers/loginReducer\";\n\n// const blogFormRef = React.createRef();\n\nconst App = props => {\n  const loadBlogs = props.initializeBlogs;\n  const loadUsers = props.initializeUsers;\n  const fetchUser = props.fetchUser;\n\n  useEffect(() => {\n    loadBlogs();\n  }, [loadBlogs]);\n\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      props.setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const blogById = id => props.blogs.find(a => a.id === id);\n  const userById = id => props.users.find(a => a.id === id);\n\n  return (\n    <Container>\n      <Router>\n        <Notification />\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            {props.loggedUser && (\n              <React.Fragment>\n                <Route exact path=\"/\">\n                  <Blogs />\n                </Route>\n                <Route exact path=\"/blogs\">\n                  <Blogs />\n                </Route>\n                <Route exact path=\"/newblog\">\n                  <AddBlog />\n                </Route>\n                <Route\n                  exact\n                  path=\"/blogs/:id\"\n                  render={({ match }) => (\n                    <Blog\n                      blog={blogById(match.params.id)}\n                      user={props.loggedUser}\n                      history={props.history}\n                    />\n                  )}\n                />\n                <Route exact path=\"/users\">\n                  <Users />\n                </Route>\n                <Route\n                  exact\n                  path=\"/users/:id\"\n                  render={({ match }) => (\n                    <User user={userById(match.params.id)} />\n                  )}\n                />\n              </React.Fragment>\n            )}\n            <Route exact path=\"/newuser\">\n              <CreateUser />\n            </Route>\n            <Redirect to=\"/login\">\n              <Login />\n            </Redirect>\n            )}\n          </Switch>\n        </div>\n      </Router>\n      <div>\n        <br />\n        <em>Blog app, Chris Stuart 2019</em>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    loggedUser: state.loggedUser,\n    users: state.users,\n    filter: state.filter,\n    search: state.search,\n    notification: state.notification\n  };\n};\n\nconst mapDispatchToProps = {\n  setNotification,\n  initializeBlogs,\n  initializeUsers,\n  fetchUser,\n  setUser,\n  logout,\n  login\n};\n\nApp.propTypes = {\n  loggedUser: PropTypes.object,\n  fetchUser: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  initializeBlogs: PropTypes.func.isRequired,\n  initializeUsers: PropTypes.func.isRequired,\n  blogs: PropTypes.array,\n  users: PropTypes.array,\n  setNotification: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport blogReducer from \"./reducers/blogReducer\";\r\nimport notificationReducer from \"./reducers/notificationReducer\";\r\nimport searchReducer from \"./reducers/searchReducer\";\r\nimport filterReducer from \"./reducers/filterReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  search: searchReducer,\r\n  filter: filterReducer,\r\n  users: userReducer,\r\n  loggedUser: loginReducer\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n"],"sourceRoot":""}